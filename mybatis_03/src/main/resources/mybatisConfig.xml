<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<!-- Mybatis主配置文件 -->
<configuration>
    <!-- 配置properties -->
    <!-- 可以在标签内部配置连接数据库信息，也可以通过属性引用外部配置文件信息 -->
    <!-- resource属性，用于指定配置文件的位置，是按照类路径的写法来写，并且必须存在于类路径下 -->
    <!-- url属性，是要求按照url的写法来写地址，协议 主机 端口 URI -->
    <properties resource="jdbc.properties">
        <!-- 配置数据库连接信息 -->
        <!-- <property name="driver" value="com.mysql.cj.jdbc.Driver"/> -->
        <!-- <property name="url" value="jdbc:mysql://localhost:3306/test"/> -->
        <!-- <property name="username" value="root"/> -->
        <!--  <property name="password" value="admin"/> -->
    </properties>

    <!-- 使用typeAliases配置别名，只能配置entity中类的别名 -->
    <typeAliases>
        <!-- typeAlias用于配置别名，type属性指定的是实体类的全限定类名 -->
        <!-- alias属性指定别名，当指定了别名就不在区分大小写 -->
        <!-- <typeAlias type="com.saihou.entity.User" alias="user"></typeAlias> -->
        <!-- 用于指定要配置别名的包，当指定之后，该包下的实体类都会注册别名，并且类名就是别名，不在区分大小写 -->
        <package name="com.saihou.entity"/>
    </typeAliases>

    <!-- 配置环境 -->
    <environments default="mysql">
        <!-- 配置MySQL环境 -->
        <environment id="mysql">
            <!-- 配置事务类型 -->
            <transactionManager type="JDBC"></transactionManager>
            <!-- 配置数据源（连接池） -->
            <!-- POOLED：采用传统的javax.sql.DataSource规范，mybatis中有针对规范的实现 -->
            <!-- UNPOOLED:采用传统的获取连接的方式，虽然也实现了java.sql.DataSource接口，但是并没有池的思想 -->
            <!-- JNDI:采用服务器提供的JNDI技术实现，来获取DataSource对象，不同的服务器所能拿到的DataSource对象不同 -->
            <!-- 如果不是web或者maven的war工程，是不能使用的 -->
            <dataSource type="POOLED">
                <!-- 配置数据库连接信息 -->
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 指定映射配置文件的位置，映射配置文件指的是每个mapper独立的配置文件 -->
    <mappers>
        <!-- <mapper resource="com/saihou/mapper/UserMapper.xml"/> -->
        <!-- package标签是用于指定mapper接口所在的包，当指定了之后就不需要在写mapper以及resource或者class了 -->
        <package name="com.saihou.mapper"/>
    </mappers>

    <!-- 如果是用注解来配置，应该使用class属性指定被注解的mapper全限定类名 -->
    <!-- <mappers> -->
        <!-- <mapper class="com.saihou.mapper.UserMapper" /> -->
    <!-- </mappers> -->
</configuration>
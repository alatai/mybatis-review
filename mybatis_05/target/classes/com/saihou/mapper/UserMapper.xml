<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.saihou.mapper.UserMapper">

    <!-- 配置查询结果的类名和实体类的属性名的对应关系 -->
    <!-- 此种方法在解决实体类与数据库属性名不对应问题时，效率不如在sql语句中起别名高 -->
    <!-- 但是可以加快开发效率 -->
    <resultMap id="userMap" type="com.saihou.entity.User">
        <!-- 主键字段的对应 -->
        <!-- <id property="userId" column="id"></id>-->
        <id property="id" column="id"></id>
        <!-- 非主键字段的对应 -->
        <result property="username" column="username"></result>
        <result property="birthday" column="birthday"></result>
        <result property="gender" column="gender"></result>
        <result property="address" column="address"></result>
    </resultMap>

    <!-- 抽取重复的sql语句 -->
    <sql id="defaultSql">
        SELECT * FROM user
    </sql>

    <!-- 查询所有 -->
    <!-- <select id="findAll" resultMap="userMap">-->
    <select id="findAll" resultType="User">
        <include refid="defaultSql"></include>
    </select>

    <!-- 根据id查询 -->
    <select id="findById" parameterType="java.lang.Integer" resultType="com.saihou.entity.User">
        SELECT * FROM user WHERE id=#{id};
    </select>

    <!-- 根据名称模糊查询 -->
    <!-- 支持两种写法，value固定写法，第一种底层使用参数占位符，性能更好 -->
    <select id="findByName" parameterType="java.lang.String" resultType="com.saihou.entity.User">
        SELECT * FROM user WHERE username LIKE #{name};
        <!-- SELECT * FROM user WHERE username LIKE '%${value}%'; -->
    </select>

    <!-- 根据QueryVo中的条件查询用户 -->
    <select id="findByQueryVo" parameterType="com.saihou.entity.QueryVo" resultType="com.saihou.entity.User">
        SELECT * FROM user WHERE username LIKE #{user.username};
    </select>

    <!-- 根据条件查询 -->
    <select id="findByCondition" parameterType="com.saihou.entity.User" resultType="com.saihou.entity.User">
        <!-- SELECT * FROM user WHERE 1=1 -->
        SELECT * FROM user
        <where>
            <if test="username != null">
                AND username=#{username}
            </if>
            <if test="gender != null">
                AND gender=#{gender}
            </if>
        </where>
    </select>

    <!-- 根据QueryVo中提供的id集合查询 -->
    <select id="findByIds" parameterType="QueryVo" resultMap="userMap">
        SELECT * FROM user
        <where>
            <if test="ids != null and ids.size() > 0">
                <foreach collection="ids" open="and id in (" close=")" item="id" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
</mapper>